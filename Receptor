int ldr = 32;
int ambientReading = 0;
#define THRESHOLD 2000

void setup() {
pinMode(ldr, INPUT);
Serial.begin(115200);
ambientReading = analogRead(ldr);
}

void loop() {

int reading = analogRead(ldr);
int bits[8];
int valor[8];
// Listening for the start bit
if (reading > ambientReading + THRESHOLD) {
delay(100);
for (int i = 0; i < 8; i++) {
if (analogRead(ldr) > ambientReading + THRESHOLD) {
bits[i] = 1;
      }
 else if (analogRead(ldr) < ambientReading + THRESHOLD) {
bits[i] = 0;
      }
delay(90);
    }

for (int i = 0; i < 8; i++) {
bits[i];
    } 
/////////////////////////////////////

if ((bits[0] == 0) && (bits[1] == 0) && (bits[2] == 0) && (bits[3] == 0)&&(bits[4] == 0)&&(bits[5] ==0) && (bits[6] == 0) && (bits[7] == 0)){Serial.print(" ");}
if ((bits[0] == 1) && (bits[1] == 1) && (bits[2] == 0) && (bits[3] == 0)&&(bits[4] == 0)&&(bits[5] ==0) && (bits[6] == 0) && (bits[7] == 0)){Serial.println(".");}
if ((bits[0] == 1) && (bits[1] == 1) && (bits[2] == 1) && (bits[3] == 0)&&(bits[4] == 0)&&(bits[5] ==0) && (bits[6] == 0) && (bits[7] == 1)){Serial.print("A");}
if ((bits[0] == 0) && (bits[1] == 0) && (bits[2] == 0) && (bits[3] == 1)&&(bits[4] == 1)&&(bits[5] ==1) && (bits[6] == 0) && (bits[7] == 0)){Serial.print("B");}
if ((bits[0] == 1) && (bits[1] == 1) && (bits[2] == 0) && (bits[3] == 0)&&(bits[4] == 0)&&(bits[5] ==0) && (bits[6] == 1) && (bits[7] == 1)){Serial.print("C");}
if ((bits[0] == 1) && (bits[1] == 1) && (bits[2] == 0) && (bits[3] == 0)&&(bits[4] == 1)&&(bits[5] ==1) && (bits[6] == 0) && (bits[7] == 0)){Serial.print("D");}
if ((bits[0] == 1) && (bits[1] == 1) && (bits[2] == 1) && (bits[3] == 0)&&(bits[4] == 0)&&(bits[5] ==0) && (bits[6] == 0) && (bits[7] == 0)){Serial.print("E");}
if ((bits[0] == 0) && (bits[1] == 0) && (bits[2] == 0) && (bits[3] == 0)&&(bits[4] == 0)&&(bits[5] ==0) && (bits[6] == 1) && (bits[7] == 1)){Serial.print("F");}
if ((bits[0] == 1) && (bits[1] == 1) && (bits[2] == 1) && (bits[3] == 1)&&(bits[4] == 1)&&(bits[5] ==1) && (bits[6] == 1) && (bits[7] == 1)){Serial.print("G");}
if ((bits[0] == 1) && (bits[1] == 1) && (bits[2] == 0) && (bits[3] == 0)&&(bits[4] == 0)&&(bits[5] ==0) && (bits[6] == 0) && (bits[7] == 1)){Serial.print("H");}
if ((bits[0] == 1) && (bits[1] == 1) && (bits[2] == 0) && (bits[3] == 1)&&(bits[4] == 1)&&(bits[5] ==0) && (bits[6] == 0) && (bits[7] == 1)){Serial.print("I");}
if ((bits[0] == 1) && (bits[1] == 1) && (bits[2] == 0) && (bits[3] == 1)&&(bits[4] == 1)&&(bits[5] ==0) && (bits[6] == 1) && (bits[7] == 0)){Serial.print("J");}
if ((bits[0] == 0) && (bits[1] == 0) && (bits[2] == 0) && (bits[3] == 1)&&(bits[4] == 1)&&(bits[5] ==0) && (bits[6] == 1) && (bits[7] == 1)){Serial.print("K");}
if ((bits[0] == 1) && (bits[1] == 1) && (bits[2] == 0) && (bits[3] == 1)&&(bits[4] == 1)&&(bits[5] ==1) && (bits[6] == 0) && (bits[7] == 0)){Serial.print("L");}
if ((bits[0] == 1) && (bits[1] == 1) && (bits[2] == 0) && (bits[3] == 1)&&(bits[4] == 1)&&(bits[5] ==1) && (bits[6] == 0) && (bits[7] == 1)){Serial.print("M");}
if ((bits[0] == 1) && (bits[1] == 1) && (bits[2] == 0) && (bits[3] == 1)&&(bits[4] == 1)&&(bits[5] ==1) && (bits[6] == 1) && (bits[7] == 0)){Serial.print("N");}
if ((bits[0] == 0) && (bits[1] == 0) && (bits[2] == 0) && (bits[3] == 1)&&(bits[4] == 1)&&(bits[5] ==1) && (bits[6] == 1) && (bits[7] == 1)){Serial.print("O");}
if ((bits[0] == 1) && (bits[1] == 1) && (bits[2] == 1) && (bits[3] == 1)&&(bits[4] == 0)&&(bits[5] ==0) && (bits[6] == 0) && (bits[7] == 0)){Serial.print("P");}
if ((bits[0] == 1) && (bits[1] == 1) && (bits[2] == 1) && (bits[3] == 1)&&(bits[4] == 0)&&(bits[5] ==0) && (bits[6] == 0) && (bits[7] == 1)){Serial.print("Q");}
if ((bits[0] == 1) && (bits[1] == 1) && (bits[2] == 1) && (bits[3] == 0)&&(bits[4] == 0)&&(bits[5] ==0) && (bits[6] == 1) && (bits[7] == 0)){Serial.print("R");}
if ((bits[0] == 1) && (bits[1] == 1) && (bits[2] == 1) && (bits[3] == 1)&&(bits[4] == 0)&&(bits[5] ==0) && (bits[6] == 1) && (bits[7] == 1)){Serial.print("S");}
if ((bits[0] == 1) && (bits[1] == 1) && (bits[2] == 1) && (bits[3] == 1)&&(bits[4] == 1)&&(bits[5] ==1) && (bits[6] == 0) && (bits[7] == 0)){Serial.print("T");}
if ((bits[0] == 1) && (bits[1] == 1) && (bits[2] == 1) && (bits[3] == 1)&&(bits[4] == 1)&&(bits[5] ==1) && (bits[6] == 0) && (bits[7] == 1)){Serial.print("U");}
if ((bits[0] == 1) && (bits[1] == 1) && (bits[2] == 1) && (bits[3] == 1)&&(bits[4] == 1)&&(bits[5] ==1) && (bits[6] == 1) && (bits[7] == 0)){Serial.print("V");}
if ((bits[0] == 1) && (bits[1] == 1) && (bits[2] == 1) && (bits[3] == 1)&&(bits[4] == 0)&&(bits[5] ==0) && (bits[6] == 1) && (bits[7] == 0)){Serial.print("W");}
if ((bits[0] == 1) && (bits[1] == 1) && (bits[2] == 1) && (bits[3] == 1)&&(bits[4] == 1)&&(bits[5] ==0) && (bits[6] == 0) && (bits[7] == 0)){Serial.print("X");}
if ((bits[0] == 1) && (bits[1] == 1) && (bits[2] == 1) && (bits[3] == 1)&&(bits[4] == 1)&&(bits[5] ==0) && (bits[6] == 0) && (bits[7] == 1)){Serial.print("Y");}
if ((bits[0] == 0) && (bits[1] == 1) && (bits[2] == 1) && (bits[3] == 1)&&(bits[4] == 1)&&(bits[5] ==1) && (bits[6] == 0) && (bits[7] == 0)){Serial.print("Z");}
if ((bits[0] == 0) && (bits[1] == 0) && (bits[2] == 0) && (bits[3] == 0)&&(bits[4] == 0)&&(bits[5] ==0) && (bits[6] == 0) && (bits[7] == 1)){Serial.print("0");}
if ((bits[0] == 0) && (bits[1] == 0) && (bits[2] == 0) && (bits[3] == 0)&&(bits[4] == 0)&&(bits[5] ==0) && (bits[6] == 1) && (bits[7] == 0)){Serial.print("1");}
if ((bits[0] == 0) && (bits[1] == 0) && (bits[2] == 0) && (bits[3] == 0)&&(bits[4] == 1)&&(bits[5] ==1) && (bits[6] == 0) && (bits[7] == 0)){Serial.print("2");}
if ((bits[0] == 0) && (bits[1] == 0) && (bits[2] == 0) && (bits[3] == 1)&&(bits[4] == 1)&&(bits[5] ==0) && (bits[6] == 0) && (bits[7] == 0)){Serial.print("3");}
if ((bits[0] == 0) && (bits[1] == 0) && (bits[2] == 1) && (bits[3] == 1)&&(bits[4] == 0)&&(bits[5] ==0) && (bits[6] == 0) && (bits[7] == 0)){Serial.print("4");}
if ((bits[0] == 0) && (bits[1] == 1) && (bits[2] == 1) && (bits[3] == 0)&&(bits[4] == 0)&&(bits[5] ==0) && (bits[6] == 0) && (bits[7] == 0)){Serial.print("5");}
}
}
